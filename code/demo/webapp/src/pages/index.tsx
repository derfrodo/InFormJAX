"use client";

import App from "@/Wheel/App";
import Head from "next/head";

import { queryDisplaysettings } from "@/Configuration/mutations/queryDisplaysetting";
import { queryWheelSettings } from "@/Configuration/mutations/queryWheelSettings";
import { queryWheelParts } from "@/Wheel/gql/queryWheelParts";
import { getClient } from "@/gql/getApolloClient";
import { useQuery } from "@apollo/client";
import { AppContext } from "next/app";
import { queryGameSettings } from "@/Wheel/gql/queryGameSettings";

export async function getServerSideProps(context: AppContext["ctx"]) {
  const c = getClient(null, true);

  // caching
  await c.query({
    query: queryWheelParts,
    variables: { filter: { disabled: false } },
  });
  await c.query({ query: queryDisplaysettings });
  await c.query({ query: queryWheelSettings });
  await c.query({ query: queryGameSettings });

  return {
    props: { state: c.extract() }, // will be passed to the page component as props
  };
}

export default function AppComponent() {
  const { data, called, loading } = useQuery(queryWheelParts, {
    variables: { filter: { disabled: false } },
    fetchPolicy: "cache-and-network",
  });

  return (
    <>
      <Head>
        <title>JAX Mit Materna</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {!called || loading ? <></> : <App values={data?.wheelParts ?? []} />}
      </main>
    </>
  );
}
